name: Frontend CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    # paths:
    #   - frontend/**

jobs:
  build:
    env:
      MAPBOX_ACCES_TOKEN: ${{ secrets.MAPBOX_ACCES_TOKEN }}

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.17.0
          cache: "npm"
          cache-dependency-path: "./frontend/package-lock.json"

      - name: Install dependencies
        run: npm install

      - name: Run build project
        run: npm run build:production

      - name: print files
        run: ls -la ./dist/

      # deploy:
      #   needs: build
      #   runs-on: ubuntu-latest

      #   steps:

      - name: log files
        run: ls -la ./dist/

      - name: chmod add permission
        run: chmod +x ./dist/

      - name: log files
        run: ls -la ./dist/

      - name: deploy angular app
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.VPS_PORT }}
          source: "frontend/dist/*"
          target: "/var/www/html"
          strip_components: 1
          overwrite: true
          # rm: true

      # - name: ðŸ“¤ Deploy to VPS
      #   uses: easingthemes/ssh-deploy@main
      #   with:
      #     SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      #     ARGS: "-azrut --delete"
      #     SOURCE: "dist/"
      #     REMOTE_HOST: ${{ secrets.VPS_HOST }}
      #     REMOTE_USER: ${{ secrets.VPS_USERNAME }}
      #     REMOTE_PORT: ${{ secrets.VPS_PORT }}
      #     TARGET: "/var/www/html"
      #     SCRIPT_BEFORE: |
      #       if ! command -v rsync &> /dev/null
      #       then
      #         echo "rsync could not be found, installing..."
      #         sudo apt-get update
      #         sudo apt-get install -y rsync
      #       else
      #         echo "rsync is already installed."
      #       fi
      #       echo "Starting deployment..."
      #     SCRIPT_AFTER: |
      #       echo "Vue.js app deployed successfully!"
