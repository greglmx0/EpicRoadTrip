name: Deploy Backend

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - backend/**
      - .github/workflows/build_and_deploy_backend.yml

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: copy backend flask app
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.VPS_PORT }}
          source: './backend/*, ./backend/Dockerfile.backend.prod, ./prod/docker-compose.yml, !./backend/Dockerfile'
          target: '/var/www/html/backend'
          strip_components: 1
          overwrite: true
          # rm: true

      - name: Deploy Backend with docker
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          MAPBOX_ACCESS_TOKEN: ${{ secrets.MAPBOX_ACCESS_TOKEN }}
          MPABOX_API_URL: ${{ secrets.MPABOX_API_URL }}
          MAPBOX_SESSION_TOKEN: ${{ secrets.MAPBOX_SESSION_TOKEN }}
          TICKETMASTER_API_URL: ${{ secrets.TICKETMASTER_API_URL }}
          TICKETMASTER_ACCESS_TOKEN: ${{ secrets.TICKETMASTER_ACCESS_TOKEN }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REDIRECT_URI: ${{ secrets.GOOGLE_REDIRECT_URI }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.VPS_PORT }}
          envs: MYSQL_ROOT_PASSWORD, MYSQL_DATABASE, MYSQL_USER, MYSQL_PASSWORD, SECRET_KEY, MAPBOX_ACCESS_TOKEN, MPABOX_API_URL, MAPBOX_SESSION_TOKEN, TICKETMASTER_API_URL, TICKETMASTER_ACCESS_TOKEN, GOOGLE_CLIENT_ID, GOOGLE_CLIENT_SECRET, GOOGLE_REDIRECT_URI
          script: |
            # Déplacer les fichiers nécessaires
            cd /var/www/html
            mv backend/prod/* . # docker-compose.yml
            mv backend/backend/* . # Dockerfile.backend.prod
            rm -rf backend/prod backend/backend

            # Relancer les conteneurs avec Docker Compose
            echo "Starting docker compose for backend database and phpmyadmin..."
            docker compose down backend phpmyadmin db
            docker compose up -d --build backend phpmyadmin db
            echo "Backend deployment completed."
